module.exports.config = {
  name: "taixiu",
  version: "1.0.0",
  hasPermssion: 0,
  credits: "DuyVuongUwU",
  description: "t√†i x·ªâu nh∆∞ng n√≥ l√† nhi·ªÅu ng∆∞·ªùi??",
  commandCategory: "gi·∫£i tr√≠",
  usages: "[new/leave]",
  cooldowns: 5
};

module.exports.handleEvent = async function({ api, event, Currencies }) {
  const { threadID, messageID, body, senderID } = event;
  const typ = ['t√†i', 'x·ªâu'];
  const random = typ[Math.floor(Math.random() * typ.length)];  
  if (!body) return;
  if (body.toLowerCase() == 't√†i' || body.toLowerCase() == 'x·ªâu') {
    const gameThread = global.taixiuS.get(threadID) || {};
    if (!gameThread) return;
    else {
      if (!gameThread.player.find(i => i.userID == senderID)) return;
      else {
        var s, q;
        var s = gameThread.player.findIndex(i => i.userID == senderID);
        var q = gameThread.player[s];
        if (q.choose.status == true) return api.sendMessage('‚ö† B·∫°n ƒë√£ ch·ªçn r·ªìi kh√¥ng th·ªÉ ch·ªçn l·∫°i!', threadID, messageID);
        else {
          const fs = require('fs-extra');
          const axios = require('axios');
          if (body.toLowerCase() == 't√†i') {
            gameThread.player.splice(s, 1);
            gameThread.player.push({ name: q.name, userID: senderID, choose: { status: true, msg: 't√†i' } });
            api.sendMessage('üë§ Ng∆∞·ªùi ch∆°i ' + q.name + ' ƒë√£ ch·ªçn T√ÄI!!', threadID, messageID);
          }
          else {
            gameThread.player.splice(s, 1);
            gameThread.player.push({ name: q.name, userID: senderID, choose: { status: true, msg: 'x·ªâu' } });
            api.sendMessage('üë§ Ng∆∞·ªùi ch∆°i ' + q.name + ' ƒë√£ ch·ªçn X·ªàU!!', threadID, messageID);
          }
          var vv = 0,
              vvv = gameThread.player.length;
          for (var c of gameThread.player) {
            if (c.choose.status == true) vv++;
          }
          if (vv == vvv) {
            api.sendMessage('ü•≥ƒêang l·∫Øc....', threadID, (err, data) => {
              if (err) return api.sendMessage(err, threadID, messageID);
              setTimeout(async function () {
                api.unsendMessage(data.messageID);
                  var ketqua = random
                  var win = [];
                  var lose = [];
                  if (ketqua.indexOf('t√†i') == 0) {
                    for (var i of gameThread.player) {
                      if (i.choose.msg == 't√†i') {
                        win.push({ name: i.name, userID: i.userID });
                      }
                      else {
                        lose.push({ name: i.name, userID: i.userID });
                      }
                    }
                  }
                  else {
                    for (var i of gameThread.player) {
                      if (i.choose.msg == 'x·ªâu') {
                        win.push({ name: i.name, userID: i.userID });
                      }
                      else {
                        lose.push({ name: i.name, userID: i.userID });
                      }
                    }
                  }
                  var msg = 'üíé K·∫æT QU·∫¢  ' + ketqua.toUpperCase() + '\nü•≥ Nh·ªØng ng∆∞·ªùi chi·∫øn th·∫Øng:\n';
                  var dem_win = 0;
                  var dem_lose = 0;
                  for (var w of win) {
                    await Currencies.increaseMoney(w.userID, parseInt(gameThread.money * 2));
                    dem_win++;
                    msg += dem_win + '. ' + w.name + ' (' + w.userID + ')\n';
                  }
                  for (var l of lose) {
                    await Currencies.decreaseMoney(l.userID, parseInt(gameThread.money));
                    if (dem_lose == 0) {
                      msg += '\nü•∫ Nh·ªØng ng∆∞·ªùi thua trong v√°n n√†y:\n';
                    }
                    dem_lose++;
                    msg += dem_lose + '. ' + l.name + ' (' + l.userID + ')\n';
                  }
                  msg += '\n\nüéÅC·ªông ti·ªÅn v√† tr·ª´ ti·ªÅn :\n';
                  msg += 'üéÅ Nh·ªØng ng∆∞·ªùi th·∫Øng nh·∫≠n ƒë∆∞·ª£c [ ' + (gameThread.money * 2) + '$ ]\n';
                  msg += 'üí∞ Nh·ªØng ng∆∞·ªùi thua b·ªã tr·ª´ [' + gameThread.money + '$ ]';
                  return api.sendMessage(msg, threadID);
              }, 5000);
            });
          }
          else return;
        }
      }
    }
  }
}
module.exports.run = async function({ api, event, args, Threads, Users, Currencies }) {
  try {
    if (!global.taixiuS) global.taixiuS = new Map();

    const { threadID, messageID, senderID } = event;
    var gameThread = global.taixiuS.get(threadID);

    if (args[0] == 'create' || args[0] == 'new' || args[0] == '-c') {
      if (!args[1] || isNaN(args[1])) return api.sendMessage('‚ö† S·ªë ti·ªÅn c∆∞·ª£c kh√¥ng ph·∫£i l√† m·ªôt con s·ªë h∆°p l·ªá!', threadID, messageID);
      if (parseInt(args[1]) < 50) return api.sendMessage('‚ö† S·ªë ti·ªÅn c∆∞·ª£c ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 50$!!', threadID, messageID);
      var check = await checkMoney(senderID, args[1]);
      if (check == false) return api.sendMessage('‚ö† B·∫°n kh√¥ng c√≥ ƒë·ªß ' + args[1] + '$ ƒë·ªÉ t·∫°o b√†n game m·ªõi!!', threadID, messageID);
      if (global.taixiuS.has(threadID)) return api.sendMessage('‚ö† Nh√≥m n√†y ƒë√£ ƒë∆∞·ª£c m·ªü b√†n game!', threadID, messageID);
      var name = await Users.getNameUser(senderID);
      global.taixiuS.set(threadID, { box: threadID, start: false, author: senderID, player: [{ name, userID: senderID, choose: { status: false, msg: null } }], money: parseInt(args[1]) });
      return api.sendMessage('ü•≥ ƒê√£ t·∫°o th√†nh c√¥ng b√†n ch∆°i game!\n=> S·ªë ti·ªÅn c∆∞·ª£c: ' + parseInt(args[1]) + '$\n=> S·ªë th√†nh vi√™n tham gia: 1 th√†nh vi√™n\n=> N·∫øu mu·ªën k·∫øt th√∫c b√†n game vui l√≤ng ghi ' + global.config['PREFIX'] + this.config.name + ' end\n=> Tham gia nh√≥m game n√†y vui l√≤ng ghi ' + global.config['PREFIX'] + this.config.name + ' join', threadID);
    }
    else if (args[0] == 'join' || args[0] == '-j') {
      if (!global.taixiuS.has(threadID)) return api.sendMessage('‚ö† Nh√≥m n√†y hi·ªán ch∆∞a c√≥ b√†n game n√†o!\n=> Vui l√≤ng h√£y t·∫°o b√†n game m·ªõi ƒë·ªÉ tham gia!', threadID, messageID);
      if (gameThread.start == true) return api.sendMessage('‚ö† Hi·ªán t·∫°i b√†n game n√†y ƒë√£ ƒë∆∞·ª£c b·∫Øt ƒë·∫ßu tr∆∞·ªõc khi b·∫°n tham gia n√™n b·∫°n kh√¥ng th·ªÉ tham gia b√†n game n√†y sau khi nh·ªØng ng∆∞·ªùi kh√°c ch∆°i xong!', threadID, messageID);
      var check = await checkMoney(senderID, gameThread.money);
      if (check == false) return api.sendMessage('‚ö† B·∫°n kh√¥ng c√≥ ƒë·ªß ' + gameThread.money + '$ ƒë·ªÉ tham gia b√†n game n√†y!', threadID, messageID);
      if (gameThread.player.find(i => i.userID == senderID)) return api.sendMessage('‚ö† Hi·ªán t·∫°i b·∫°n ƒë√£ tham gia b√†n game n√†y!', threadID, messageID);
      var name = await Users.getNameUser(senderID);
      gameThread.player.push({ name, userID: senderID, choose: { stats: false, msg: null } });
      global.taixiuS.set(threadID, gameThread);
      return api.sendMessage('ü•≥ B·∫°n ƒë√£ tham gia b√†n game!\n=> S·ªë th√†nh vi√™n hi·ªán t·∫°i l√† ' + gameThread.player.length + ' th√†nh vi√™n', threadID, messageID);
    }
    else if (args[0] == 'leave' || args[0] == '-l') {
      if (!global.taixiuS.has(threadID)) return api.sendMessage('‚ö† Hi·ªán t·∫°i kh√¥ng c√≥ b√†n game n√†o ƒë·ªÉ r·ªùi!', threadID, messageID);
      if (!gameThread.player.find(i => i.userID == senderID)) return api.sendMessage('‚ö† B·∫°n ƒë√£ kh√¥ng c√≥ trong b√†n game ƒë·ªÉ r·ªùi!', threadID, messageID);
      if (gameThread.start == true) return api.sendMessage('‚ö† B√†n game ƒë√£ ƒë∆∞·ª£c b·∫Øt ƒë·∫ßu kh√¥ng th·ªÉ r·ªùi!', threadID, messageID);
      if (gameThread.author == senderID) {
        global.taixiuS.delete(threadID);
        var name = await Users.getNameUser(senderID);
        return api.sendMessage('ü•∫ ' + name + ' ƒë√£ r·ªùi kh·ªèi b√†n game, b√†n game c·ªßa nh√≥m ƒë√£ ƒë∆∞·ª£c gi·∫£i t√°n!', threadID, messageID);
      }
      else {
        gameThread.player.splice(gameThread.player.findIndex(i => i.userID == senderID), 1);
        global.taixiuS.set(threadID, gameThread);
        var name = await Users.getNameUser(senderID);
        api.sendMessage('ü•∫ B·∫°n ƒë√£ r·ªùi kh·ªèi b√†n game c·ªßa nh√≥m!', threadID, messageID);
        return api.sendMessage('ü•∫ ' + name + ' ƒë√£ r·ªùi kh·ªèi b√†n game!\n=> Hi·ªán t·∫°i b√†n game c√≤n ' + gameThread.player.length + ' th√†nh vi√™n', threadID);
      }
    }
    else if (args[0] == 'start' || args[0] == '-s') {
      if (!gameThread) return api.sendMessage('‚ö† Hi·ªán t·∫°i nh√≥m n√†y ch∆∞a c√≥ b√†n game n√†o!', threadID, messageID);
      if (gameThread.author != senderID) return api.sendMessage('‚ö† B·∫°n kh√¥ng ph·∫£i l√† ng∆∞·ªùi t·∫°o ra b√†n game n√†y n√™n kh√¥ng th·ªÉ b·∫Øt ƒë·∫ßu game', threadID, messageID);
      if (gameThread.player.length <= 1) return api.sendMessage('‚ö† B√†n game c·ªßa b·∫°n kh√¥ng c√≥ ƒë·ªß th√†nh vi√™n ƒë·ªÉ c√≥ th·ªÉ b·∫Øt ƒë·∫ßu!!!', threadID, messageID);
      if (gameThread.start == true) return api.sendMessage('‚ö† B√†n game c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c b·∫Øt ƒë·∫ßu t·ª´ tr∆∞·ªõc', threadID, messageID);
      gameThread.start = true;
      global.taixiuS.set(threadID, gameThread);
      return api.sendMessage('üîä GAME START: \n-> Xin m·ªùi ' + gameThread.player.length + ' ng∆∞·ªùi ch∆°i nh·∫Øn "t√†i" ho·∫∑c "x·ªâu"(L∆∞u √Ω: nh·∫Øn ·ªü trong group n√†y kh√¥ng nh·∫Øn trong group kh√°c!!!)', threadID);
    }
    else if (args[0] == 'end' || args[0] == '-e') {
      if (!gameThread) return api.sendMessage('‚ö† Hi·ªán t·∫°i nh√≥m n√†y ch∆∞a c√≥ b√†n game n√†o!', threadID, messageID);
      if (gameThread.author != senderID) return api.sendMessage('‚ö† B·∫°n kh√¥ng ph·∫£i l√† ng∆∞·ªùi t·∫°o ra b√†n game n√™n kh√¥ng th·ªÉ x√≥a b√†n game', threadID, messageID);
      global.taixiuS.delete(threadID);
      return api.sendMessage('üéÜ ƒê√£ x√≥a b√†n game!', threadID, messageID);
    }
    else {
      return api.sendMessage("‚ö† BODY:\n- Create/new/-c: T·∫°o b√†n ch∆°i t√†i x·ªâu\n- Join/-j: Tham gia v√†o b√†n t√†i x·ªâu\n- Leave/-l: R·ªùi kh·ªèi b√†n t√†i x·ªâu\n- Start/-s: B·∫Øt ƒë·∫ßu b√†n t√†i x·ªâu\n- End/-e: K·∫øt th√∫c b√†n t√†i x·ªâu", threadID, messageID);
    }
  }
  catch (err) {
    return api.sendMessage('‚ö† ERROR MODULE TAIXIU: ' + err, event.threadID, event.messageID);
  }
  async function checkMoney(senderID, maxMoney) {
    var i, w;
    i = (await Currencies.getData(senderID)) || {};
    w = i.money || 0
    if (w < parseInt(maxMoney)) return false;
    else return true;
  }
}